{"version":3,"file":"static/js/238.ccc1139a.chunk.js","mappings":"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","sources":["components/FollowUser/FollowUser.js","components/Post/PostReactions/LikePost.js","components/Post/PostReactions/UnicornPost.js","components/Post/PostReactions/BookmarkPost.js","components/Post/PostReactions/PostReactions.js","components/Comment/ReplyButton.js","components/Comment/EditComment/EditCommentButton.js","components/Comment/LikeComment/LikeCommentButton.js","components/Comment/LikeComment/LikeComment.js","components/Comment/NewComment/CommentForm.js","components/Comment/EditComment/EditComment.js","components/Comment/NewComment/NewComment.js","components/Comment/DeleteComment/DeleteCommentButton.js","components/Comment/DeleteComment/DeleteComment.js","components/Comment/Comment.js","components/Comment/Comments.js","components/Modal/DeletionModal.js","components/Post/DeletePost.js","components/Post/PostContent/PostContent.js","components/Post/PostAuthor/PostAuthor.js","pages/Post/Post.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { SocketContext } from '../../context/socket';\nimport useHttpClient from '../../hooks/useHttpClient';\nimport { checkInArray } from '../../utils';\nimport './FollowUser.css';\n\nexport const FollowUser = ({\n  followId,\n  setShowModal,\n  followers,\n  userToFollow,\n}) => {\n  const { currentUser } = useContext(AuthContext);\n  const { current } = useContext(SocketContext).socket;\n  const currentUserId = currentUser && currentUser.userId;\n  const { sendReq } = useHttpClient();\n\n  const [following, setFollowing] = useState(false);\n\n  useEffect(() => {\n    setFollowing(checkInArray(followers, currentUserId));\n  }, [followers, currentUserId]);\n\n  const handleFollow = () => {\n    !currentUserId ? setShowModal(true) : followUser(followId);\n  };\n\n  const followUser = async (followId) => {\n    let action = following ? 'unfollow' : 'follow';\n    setFollowing((following) => !following);\n    if (action === 'follow') {\n      current.emit('follow', {\n        sender: currentUser,\n        receiver: userToFollow,\n      });\n    }\n    const reqData = { userId: currentUserId, followId };\n    try {\n      await sendReq(\n        `${process.env.REACT_APP_BASE_URL}/users/${action}`,\n        'PUT',\n        JSON.stringify(reqData),\n        {\n          Authorization: `Bearer ${currentUser.token}`,\n          'Content-Type': 'application/json',\n        }\n      );\n      //redirect user to the landing page\n    } catch (err) {}\n  };\n  return (\n    <button\n      className={`btn--profile-cta ${following ? 'btn-following' : ''}`}\n      onClick={handleFollow}\n    >\n      {following ? 'Following' : 'Follow'}\n    </button>\n  );\n};\n","import React, { useContext } from 'react';\nimport { AuthContext } from '../../../context/auth';\nimport { LikeIcon } from '../../Icons/Icons';\n\nexport const LikePost = ({ likes, handleReaction, isLiked, setShowModal }) => {\n  const { currentUser } = useContext(AuthContext);\n  const currentUserId = currentUser && currentUser.userId;\n  const action = isLiked ? 'unlike' : 'like';\n  const effect = isLiked ? 'negative' : 'positive';\n\n  const handleClick = () => {\n    !currentUserId\n      ? setShowModal(true)\n      : handleReaction(action, effect, likes, 'isLiked');\n  };\n\n  return (\n    <div\n      className={`${\n        isLiked ? 'reactions__block clicked--like' : 'reactions__block'\n      }`}\n    >\n      <i\n        onClick={handleClick}\n        className={`${\n          isLiked ? 'reactions__like reactions__liked' : 'reactions__like'\n        }`}\n      >\n        <LikeIcon state={isLiked} size='2.5rem' />\n      </i>\n      <span>{likes && likes.length}</span>\n    </div>\n  );\n};\n","import { GiUnicorn } from '@react-icons/all-files/gi/GiUnicorn';\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../../../context/auth';\n\nexport const UnicornPost = ({\n  unicorns,\n  isUnicorned,\n  handleReaction,\n  setShowModal,\n}) => {\n  const { currentUser } = useContext(AuthContext);\n  const currentUserId = currentUser && currentUser.userId;\n\n  const action = isUnicorned ? 'ununicorn' : 'unicorn';\n  const effect = isUnicorned ? 'negative' : 'positive';\n\n  const handleClick = () => {\n    !currentUserId\n      ? setShowModal(true)\n      : handleReaction(action, effect, unicorns, 'isUnicorned');\n  };\n  return (\n    <div\n      className={`${\n        isUnicorned ? 'reactions__block clicked--unicorn' : 'reactions__block '\n      }`}\n    >\n      <i\n        onClick={handleClick}\n        className={`${\n          isUnicorned\n            ? 'reactions__unicorn reactions__unicorned'\n            : 'reactions__unicorn'\n        }`}\n      >\n        <GiUnicorn size='2.5rem' />\n      </i>\n      <span>{unicorns && unicorns.length}</span>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { AuthContext } from '../../../context/auth';\nimport { BookmarkIcon } from '../../Icons/Icons';\n\nexport const BookmarkPost = ({\n  bookmarks,\n  isBookmarked,\n  handleReaction,\n  setShowModal,\n  id,\n  children,\n}) => {\n  const { currentUser } = useContext(AuthContext);\n  const currentUserId = currentUser && currentUser.userId;\n  const action = isBookmarked ? 'unbookmark' : 'bookmark';\n  const effect = isBookmarked ? 'negative' : 'positive';\n\n  const handleClick = () => {\n    !currentUserId\n      ? setShowModal(true)\n      : handleReaction(action, effect, bookmarks, 'isBookmarked');\n  };\n  return (\n    <>\n      <div\n        className={`${\n          isBookmarked\n            ? 'reactions__block clicked--bookmark'\n            : 'reactions__block '\n        }`}\n      >\n        <i\n          onClick={handleClick}\n          className={`${\n            isBookmarked\n              ? 'reactions__save reactions__saved'\n              : 'reactions__save'\n          }`}\n        >\n          <BookmarkIcon state={isBookmarked} size='2.5rem' />\n        </i>\n        <span>{bookmarks && bookmarks.length}</span>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { LikePost } from './LikePost';\nimport { UnicornPost } from './UnicornPost';\nimport { BookmarkPost } from './BookmarkPost';\nimport usePostReaction from './hooks/usePostReaction';\nimport './PostReactions.css';\n\nconst PostReactions = ({ post, setShowModal, handleInteraction }) => {\n  const { likes, unicorns, bookmarks, id, author } = post;\n  const { state, handleReaction } = usePostReaction(\n    likes,\n    unicorns,\n    bookmarks,\n    id,\n    author\n  );\n  const { isLiked, isUnicorned, isBookmarked } = state;\n  return (\n    <div className='post__reactions'>\n      <LikePost\n        likes={likes}\n        isLiked={isLiked}\n        setShowModal={setShowModal}\n        handleReaction={handleReaction}\n      />\n      <UnicornPost\n        unicorns={unicorns}\n        isUnicorned={isUnicorned}\n        setShowModal={setShowModal}\n        handleReaction={handleReaction}\n      />\n      <BookmarkPost\n        bookmarks={bookmarks}\n        isBookmarked={isBookmarked}\n        setShowModal={setShowModal}\n        handleReaction={handleReaction}\n      />\n    </div>\n  );\n};\n\nexport default PostReactions;\n","import { FaRegComment } from '@react-icons/all-files/fa/FaRegComment';\nimport React, { useContext } from 'react';\nimport { canReply } from '../../utils';\nimport { CommentContext } from './Comments';\n\nexport const ReplyButton = ({ currentUserId, comment, setShowModal }) => {\n  const { setActiveComment } = useContext(CommentContext);\n  const handleClick = () => {\n    canReply(currentUserId)\n      ? setActiveComment({ id: comment.id, type: 'replying' })\n      : setShowModal(true);\n  };\n  return (\n    <button className='btn comments__total' onClick={handleClick}>\n      <i>\n        <FaRegComment size='2rem' />\n      </i>\n      <span className='reactions__text'>Reply</span>\n    </button>\n  );\n};\n","import React, { useContext } from 'react';\nimport { canModifyComment } from '../../../utils';\nimport { CommentContext } from '../Comments';\n\nexport const EditCommentButton = ({ currentUserId, commentId, authorId }) => {\n  const { setActiveComment } = useContext(CommentContext);\n  return (\n    <>\n      {canModifyComment(currentUserId, authorId) && (\n        <button\n          className='btn auth__edit'\n          onClick={() => setActiveComment({ id: commentId, type: 'editing' })}\n        >\n          Edit\n        </button>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { LikeIcon } from '../../Icons/Icons';\n\nexport const LikeCommentButton = ({ handleLike, isLiked, likes }) => {\n  return (\n    <button\n      className={`btn comments__total ${isLiked && 'comment__liked'}`}\n      onClick={handleLike}\n    >\n      <i className='like-comment-icon'>\n        <LikeIcon state={isLiked} size='2rem' />\n      </i>\n      <span>\n        {likes && likes.length}\n        <span className='reactions__text'>likes</span>\n      </span>\n    </button>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../../context/auth';\nimport useHttpClient from '../../../hooks/useHttpClient';\nimport { checkInArray } from '../../../utils';\nimport ErrorModal from '../../Modal/ErrorModal';\nimport { LikeCommentButton } from './LikeCommentButton';\n\nexport const LikeComment = ({ likes, commentId, setShowModal }) => {\n  const { currentUser } = useContext(AuthContext);\n  const currentUserId = currentUser && currentUser.userId;\n  const { sendReq, error, clearError } = useHttpClient();\n  const [isLiked, setLiked] = useState(checkInArray(likes, currentUserId));\n\n  const handleLike = async () => {\n    if (!currentUserId) {\n      setShowModal(true);\n      return;\n    }\n    let action = checkInArray(likes, currentUserId) ? 'unlike' : 'like';\n    if (action === 'unlike') {\n      likes.splice(likes.indexOf(currentUserId), 1);\n    } else {\n      likes.push(currentUserId);\n    }\n    setLiked((isLiked) => !isLiked);\n    try {\n      await sendReq(\n        `${process.env.REACT_APP_BASE_URL}/comments/${commentId}/${action}`,\n        'PUT',\n        JSON.stringify({ userId: currentUser.userId, commentId /* action */ }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${currentUser.token}`,\n        }\n      );\n    } catch (err) {}\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClose={clearError} />\n\n      <LikeCommentButton\n        handleLike={handleLike}\n        isLiked={isLiked}\n        likes={likes}\n      />\n    </>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { AuthContext } from '../../../context/auth';\nimport Avatar from '../../Avatar/Avatar';\n\nconst CommentForm = ({\n  handleSubmit,\n  submitLabel,\n  hasCancelButton = false,\n  initialText = '',\n  handleCancel,\n  avatar,\n}) => {\n  const { currentUser } = useContext(AuthContext);\n  const [text, setText] = useState(initialText);\n  const isTextAreaDisabled = text.length === 0;\n  const DEFAULT_COMMENT_AVATAR =\n    'https://res.cloudinary.com/drkvr9wta/image/upload/v1647701003/undraw_profile_pic_ic5t_ncxyyo.png';\n  // const commentText = useRef(null);\n\n  const inputHandler = (evt) => {\n    evt.persist();\n    setText(evt.target.value);\n  };\n\n  const commentSubmitHandle = async (evt) => {\n    evt.preventDefault();\n    handleSubmit(text);\n    setText('');\n  };\n\n  return (\n    <div className={`comment-form ${submitLabel === 'Reply' && 'reply-form'}`}>\n      {avatar && (\n        <Avatar\n          src={\n            currentUser && currentUser.avatar\n              ? currentUser.avatar\n              : DEFAULT_COMMENT_AVATAR\n          }\n        />\n      )}\n      <form onSubmit={commentSubmitHandle}>\n        <input\n          type='textarea'\n          placeholder='Add to the discussion'\n          name='comment'\n          value={text}\n          onChange={inputHandler}\n          // ref={commentText}\n        />\n        <div className='comments__btn'>\n          {text && (\n            <button className='btn btn--comment' disabled={isTextAreaDisabled}>\n              {submitLabel}\n            </button>\n          )}\n          {hasCancelButton && (\n            <button\n              className='btn btn--dismiss'\n              type='button'\n              onClick={handleCancel}\n            >\n              Dismiss\n            </button>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentForm;\n","import React, { useContext } from 'react';\nimport { AuthContext } from '../../../context/auth';\nimport useHttpClient from '../../../hooks/useHttpClient';\nimport ErrorModal from '../../Modal/ErrorModal';\nimport CommentForm from '../NewComment/CommentForm';\nimport { CommentContext } from '../Comments';\n\nexport const EditComment = ({ commentId, commentBody, setShowModal }) => {\n  const { setActiveComment, comments, setComments } =\n    useContext(CommentContext);\n  const { currentUser } = useContext(AuthContext);\n  const { sendReq, error, clearError } = useHttpClient();\n\n  const updateComment = async (body, commentId) => {\n    const updatedComments = comments.map((comment) =>\n      comment.id === commentId ? { ...comment, body } : comment\n    );\n    //update comment from backend\n    try {\n      await sendReq(\n        `${process.env.REACT_APP_BASE_URL}/comments/${commentId}`,\n        'PATCH',\n        JSON.stringify({ body, author: currentUser.userId }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${currentUser.token}`,\n        }\n      );\n    } catch (err) {}\n    setComments(updatedComments);\n    setActiveComment(null);\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClose={clearError} />\n      <CommentForm\n        submitLabel='Edit comment'\n        hasCancelButton={true}\n        initialText={commentBody}\n        handleSubmit={(text) => updateComment(text, commentId)}\n        handleCancel={() => setActiveComment(null)}\n      />\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { AuthContext } from '../../../context/auth';\nimport { SocketContext } from '../../../context/socket';\nimport useHttpClient from '../../../hooks/useHttpClient';\nimport ErrorModal from '../../Modal/ErrorModal';\nimport CommentForm from './CommentForm';\nimport { CommentContext } from '../Comments';\n\nexport const NewComment = ({ replyId }) => {\n  const { setActiveComment, setComments, postId, postAuthor } =\n    useContext(CommentContext);\n  const { currentUser } = useContext(AuthContext);\n  const { socket } = useContext(SocketContext);\n  const { sendReq, error, clearError } = useHttpClient();\n  const currentUserId = currentUser && currentUser.userId;\n  const createComment = async (text, parentId = null) => {\n    const reqData = {\n      parentPost: postId,\n      body: text,\n      author: currentUserId,\n      parentId,\n      userId: currentUserId,\n    };\n    try {\n      const newComment = await sendReq(\n        `${process.env.REACT_APP_BASE_URL}/comments`,\n        'POST',\n        JSON.stringify(reqData),\n        {\n          Authorization: `Bearer ${currentUser.token}`,\n          'Content-Type': 'application/json',\n        }\n      );\n      setComments((comments = []) => [newComment.comment, ...comments]);\n\n      // setComments((comments) => [newComment.comment, ...comments]);\n      if (socket.current) {\n        socket.current.emit('comment', {\n          sender: currentUser,\n          postId,\n          receiver: postAuthor,\n        });\n      }\n    } catch (err) {}\n    setActiveComment(null);\n  };\n  return (\n    <>\n      <ErrorModal error={error} onClose={clearError} />\n      <CommentForm\n        avatar={replyId ? false : true}\n        handleSubmit={(text) => createComment(text, replyId && replyId)}\n        submitLabel={replyId ? 'Reply' : 'Submit'}\n        handleCancel={() => setActiveComment(null)}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { canModifyComment } from '../../../utils';\n\nexport const DeleteCommentButton = ({\n  currentUserId,\n  commentId,\n  authorId,\n  deleteComment,\n}) => {\n  return (\n    <>\n      {canModifyComment(currentUserId, authorId) && (\n        <button\n          className='btn auth__delete comment__auth'\n          onClick={() => deleteComment(commentId)}\n        >\n          Delete\n        </button>\n      )}\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { AuthContext } from '../../../context/auth';\nimport useHttpClient from '../../../hooks/useHttpClient';\nimport ErrorModal from '../../Modal/ErrorModal';\nimport { CommentContext } from '../Comments';\nimport { DeleteCommentButton } from './DeleteCommentButton';\n\nexport const DeleteComment = ({ commentId, authorId }) => {\n  const { setActiveComment, comments, setComments } =\n    useContext(CommentContext);\n  const { currentUser } = useContext(AuthContext);\n  const currentUserId = currentUser && currentUser.userId;\n  const { sendReq, error, clearError } = useHttpClient();\n\n  const deleteComment = async (commentId) => {\n    const updatedComments = comments.filter(\n      (comment) => comment.id !== commentId\n    );\n\n    try {\n      await sendReq(\n        `${process.env.REACT_APP_BASE_URL}/comments/${commentId}`,\n        'DELETE',\n        JSON.stringify({ author: currentUserId }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${currentUser.token}`,\n        }\n      );\n    } catch (err) {}\n    setComments(updatedComments);\n    setActiveComment(null);\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClose={clearError} />\n      <DeleteCommentButton\n        currentUserId={currentUserId}\n        commentId={commentId}\n        authorId={authorId}\n        deleteComment={deleteComment}\n      />\n    </>\n  );\n};\n","import { useContext, useState } from 'react';\nimport React from 'react';\nimport { formatDate, isEditing, isReplying } from '../../utils';\nimport AuthModal from '../Modal/AuthModal';\nimport Avatar from '../Avatar/Avatar';\nimport { ReplyButton } from './ReplyButton';\nimport { EditCommentButton } from './EditComment/EditCommentButton';\nimport { LikeComment } from './LikeComment/LikeComment';\nimport { EditComment } from './EditComment/EditComment';\nimport { NewComment } from './NewComment/NewComment';\nimport { DeleteComment } from './DeleteComment/DeleteComment';\nimport { CommentContext } from './Comments';\n\nconst Comment = ({ comment, replies, parentId = null, currentUserId }) => {\n  const { activeComment } = useContext(CommentContext);\n  const [showModal, setShowModal] = useState(false);\n  const createdAt = formatDate(comment.date);\n  return (\n    <>\n      <div className='container-comment'>\n        <Avatar\n          className='author__image--comment'\n          src={`${comment.author.avatar}`}\n        />\n        <div className='comment'>\n          <div className='comment__content'>\n            <div className='comment__meta'>\n              <div className='comment__author'>{comment.author.name}</div>\n              <span>{createdAt}</span>\n            </div>\n\n            {!isEditing(activeComment, comment.id) ? (\n              <div className='comment__body'>{comment.body}</div>\n            ) : (\n              <EditComment\n                commentId={comment.id}\n                commentBody={comment.body}\n                setShowModal={setShowModal}\n              />\n            )}\n          </div>\n          <AuthModal onClose={() => setShowModal(false)} show={showModal} />\n          <div className='preview__reactions'>\n            <div className='preview__reactions--left'>\n              <LikeComment\n                likes={comment.likes}\n                commentId={comment.id}\n                setShowModal={setShowModal}\n              />\n              <ReplyButton\n                currentUserId={currentUserId}\n                comment={comment}\n                setShowModal={setShowModal}\n              />\n            </div>\n\n            <div className='preview__reactions--right'>\n              <EditCommentButton\n                currentUserId={currentUserId}\n                commentId={comment.id}\n                authorId={comment.author.id}\n              />\n              <DeleteComment\n                commentId={comment.id}\n                authorId={comment.author.id}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isReplying(activeComment, comment.id) && (\n        <NewComment replyId={parentId ? parentId : comment.id} />\n      )}\n      <div className='replies' style={{ marginLeft: '5rem' }}>\n        {replies.length > 0 &&\n          replies.map((reply) => (\n            <Comment\n              comment={reply}\n              key={reply._id}\n              replies={[]}\n              parentId={comment.id}\n              currentUserId={currentUserId}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default Comment;\n","import React, { useState, useContext, useEffect, createContext } from 'react';\nimport { useHttpClient } from '../../hooks/useHttpClient';\nimport Comment from './Comment';\nimport { AuthContext } from '../../context/auth';\nimport { getReplies } from '../../utils';\nimport ErrorModal from '../Modal/ErrorModal';\nimport { NewComment } from './NewComment/NewComment';\nimport './Comments.css';\n\nexport const CommentContext = createContext();\n\nconst Comments = ({ postAuthor, postId }) => {\n  const { currentUser } = useContext(AuthContext);\n  const currentUserId = currentUser && currentUser.userId;\n  const [activeComment, setActiveComment] = useState(null);\n  const [comments, setComments] = useState([]);\n  const rootComments =\n    comments && comments.filter((comment) => comment && !comment.parentId);\n  const { sendReq, error, clearError } = useHttpClient();\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const responseData = await sendReq(\n          `${process.env.REACT_APP_BASE_URL}/comments/${postId}`\n        );\n        setComments(responseData.comments);\n      } catch (err) {}\n    };\n    fetchComments();\n  }, [sendReq, postId]);\n\n  return (\n    <CommentContext.Provider\n      value={{\n        comments,\n        setComments,\n        postId,\n        postAuthor,\n        activeComment,\n        setActiveComment,\n      }}\n    >\n      <ErrorModal error={error} onClose={clearError} />\n      <div className='comments'>\n        <h2>{`Discussion (${\n          comments ? `${comments.length} comments` : 0\n        })`}</h2>\n        <NewComment />\n        {rootComments &&\n          rootComments.map((comment) => (\n            <Comment\n              key={comment._id}\n              comment={comment}\n              replies={getReplies(comments, comment._id)}\n              parentId={comment.parentId}\n              currentUserId={currentUserId}\n            />\n          ))}\n      </div>\n    </CommentContext.Provider>\n  );\n};\n\nexport default Comments;\n","import React from 'react';\n\nimport Modal from './Modal';\n\nconst DeletionModal = (props) => {\n  return (\n    <Modal\n      title='Are you sure?'\n      show={props.show}\n      onClose={props.onClose}\n      footer={\n        <>\n          <button\n            onClick={props.cancelDeleteHandler}\n            className='btn btn--cancel'\n          >\n            Cancel\n          </button>\n          <button\n            onClick={props.confirmDeleteHandler}\n            className='btn btn--delete'\n          >\n            Delete\n          </button>\n        </>\n      }\n    >\n      <p>\n        Do you want to proceed and delete this post? Please note that this\n        action can't be undone!\n      </p>\n    </Modal>\n  );\n};\n\nexport default DeletionModal;\n","import React, { useContext, useState } from 'react';\nimport {\n  useHistory,\n  useParams,\n} from 'react-router-dom/cjs/react-router-dom.min';\nimport { AuthContext } from '../../context/auth';\nimport useHttpClient from '../../hooks/useHttpClient';\nimport DeletionModal from '../Modal/DeletionModal';\nimport ErrorModal from '../Modal/ErrorModal';\n\nexport const DeletePost = ({ authorId }) => {\n  const { sendReq, error, clearError } = useHttpClient();\n  const history = useHistory();\n  const { titleURL, postId } = useParams();\n  const { currentUser } = useContext(AuthContext);\n  const currentUserId = currentUser && currentUser.userId;\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteWarningHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteWarningHandler = () => {\n    handleDelete();\n  };\n\n  const handleDelete = async () => {\n    try {\n      await sendReq(\n        `${process.env.REACT_APP_BASE_URL}/posts/${titleURL}/${postId}`,\n        'DELETE',\n        JSON.stringify({ author: currentUserId }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${currentUser.token}`,\n        }\n      );\n      history.push('/');\n    } catch (err) {}\n  };\n  return (\n    <>\n      <ErrorModal error={error} onClose={clearError} />\n\n      <DeletionModal\n        onClose={() => setShowConfirmModal(false)}\n        show={showConfirmModal}\n        cancelDeleteHandler={cancelDeleteWarningHandler}\n        confirmDeleteHandler={confirmDeleteWarningHandler}\n      />\n      {currentUserId === authorId && (\n        <button className='btn auth__delete' onClick={showDeleteWarningHandler}>\n          Delete Post\n        </button>\n      )}\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport Avatar from '../../Avatar/Avatar';\nimport { AuthContext } from '../../../context/auth';\nimport Comments from '../../Comment/Comments';\nimport { DeletePost } from '../DeletePost';\nimport { PostTags } from '../../PostTags/PostTags';\nimport { PostImage } from '../../PostImage/PostImage';\nimport { formatDate } from '../../../utils';\nimport './PostContent.css';\n\nconst PostContent = ({ post, handleDelete }) => {\n  const { image, imgAlt, author, titleURL, date, title, tags, body, id } = post;\n  const createdAt = formatDate(date);\n  const { currentUser } = useContext(AuthContext);\n  const currentUserId = currentUser && currentUser.userId;\n\n  return (\n    <div className='post'>\n      <PostImage src={image} alt={imgAlt} />\n      <div className='post__body'>\n        <div className='post__author'>\n          <Avatar link={`/users/${author.id}`} src={author.avatar} />\n          <div className='author__details'>\n            <Link to={`/users/${author.id}`}>\n              <h4>{author.name}</h4>\n            </Link>\n            <p>{createdAt}</p>\n          </div>\n        </div>\n        <h1 className='post__heading'>{title}</h1>\n        <PostTags tags={tags} />\n        <div className='post__text'>\n          <ReactMarkdown>{body}</ReactMarkdown>\n        </div>\n\n        <div className='post__auth'>\n          {currentUserId === author.id && (\n            <Link className='auth__edit' to={`/posts/${titleURL}/${id}/edit`}>\n              Edit Post\n            </Link>\n          )}\n\n          <DeletePost authorId={author.id} />\n        </div>\n      </div>\n      {post.comments && <Comments postId={id} postAuthor={author} />}\n    </div>\n  );\n};\n\nexport default PostContent;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../../context/auth';\nimport Avatar from '../../Avatar/Avatar';\nimport { FollowUser } from '../../FollowUser/FollowUser';\nimport { AuthorInfo } from '../../AuthorInfo/AuthorInfo';\n\nconst PostAuthor = ({ setShowModal, author }) => {\n  const { currentUser } = useContext(AuthContext);\n  const currentUserId = currentUser && currentUser.userId;\n  return (\n    <div className='author flow-content'>\n      <div className='author__content'>\n        <Avatar link={`/users/${author.id}`} src={author.avatar} />\n        <div className='author__details'>\n          <h3>{author.name}</h3>\n        </div>\n      </div>\n      {currentUserId === author.id ? (\n        <Link\n          className='btn btn--profile-cta btn--profile-edit'\n          to={`/users/${author.id}/edit`}\n        >\n          Edit Profile\n        </Link>\n      ) : (\n        <FollowUser\n          followId={author.id}\n          setShowModal={setShowModal}\n          followers={author.followers}\n          userToFollow={author}\n        />\n      )}\n      <AuthorInfo author={author} />\n    </div>\n  );\n};\n\nexport default PostAuthor;\n","import React, { useState, useEffect } from 'react';\nimport { useHttpClient } from '../../hooks/useHttpClient';\nimport { useParams } from 'react-router-dom';\nimport PostReactions from '../../components/Post/PostReactions/PostReactions';\nimport PostContent from '../../components/Post/PostContent/PostContent';\nimport PostAuthor from '../../components/Post/PostAuthor/PostAuthor';\nimport ErrorModal from '../../components/Modal/ErrorModal';\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport AuthModal from '../../components/Modal/AuthModal';\n\nconst Post = (props) => {\n  const [post, setPost] = useState({});\n  const { isLoading, sendReq, error, clearError } = useHttpClient();\n  const { postId, titleURL } = useParams();\n  const [showModal, setShowModal] = useState(false);\n\n  let { author } = post;\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const responseData = await sendReq(\n          `${process.env.REACT_APP_BASE_URL}/posts/${titleURL}/${postId}`\n        );\n        setPost(responseData.post);\n      } catch (err) {}\n    };\n    fetchPost();\n  }, [sendReq, postId, titleURL]);\n\n  return (\n    <>\n      {isLoading && <LoadingSpinner asOverlay={true} />}\n      <ErrorModal error={error} onClose={clearError} />\n      {!isLoading && post.author && (\n        <div className='container-layout-post'>\n          <PostReactions post={post} setShowModal={setShowModal} />\n          <AuthModal onClose={() => setShowModal(false)} show={showModal} />\n          <div className='container-post'>\n            <PostContent post={post} />\n            <PostAuthor setShowModal={setShowModal} author={author} />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Post;\n"],"names":["FollowUser","followId","setShowModal","followers","userToFollow","currentUser","useContext","AuthContext","current","SocketContext","socket","currentUserId","userId","sendReq","useHttpClient","useState","following","setFollowing","useEffect","checkInArray","followUser","action","emit","sender","receiver","reqData","process","JSON","stringify","Authorization","token","className","onClick","LikePost","likes","handleReaction","isLiked","effect","state","size","length","UnicornPost","unicorns","isUnicorned","GiUnicorn","BookmarkPost","bookmarks","isBookmarked","id","children","post","handleInteraction","author","usePostReaction","ReplyButton","comment","setActiveComment","CommentContext","canReply","type","FaRegComment","EditCommentButton","commentId","authorId","canModifyComment","LikeCommentButton","handleLike","LikeComment","error","clearError","setLiked","splice","indexOf","push","ErrorModal","onClose","handleSubmit","submitLabel","hasCancelButton","initialText","handleCancel","avatar","text","setText","isTextAreaDisabled","commentSubmitHandle","evt","preventDefault","Avatar","src","onSubmit","placeholder","name","value","onChange","persist","target","disabled","EditComment","commentBody","comments","setComments","updateComment","body","updatedComments","map","NewComment","replyId","postId","postAuthor","createComment","parentId","parentPost","newComment","DeleteCommentButton","deleteComment","DeleteComment","filter","Comment","replies","activeComment","showModal","createdAt","formatDate","date","isEditing","AuthModal","show","isReplying","style","marginLeft","reply","_id","createContext","rootComments","fetchComments","responseData","Provider","getReplies","props","Modal","title","footer","cancelDeleteHandler","confirmDeleteHandler","DeletePost","history","useHistory","useParams","titleURL","showConfirmModal","setShowConfirmModal","handleDelete","image","imgAlt","tags","PostImage","alt","link","to","PostTags","AuthorInfo","setPost","isLoading","fetchPost","LoadingSpinner","asOverlay"],"sourceRoot":""}