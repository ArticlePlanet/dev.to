{"version":3,"file":"static/js/118.96704b46.chunk.js","mappings":"4PAkDA,UA1CoB,WAClB,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OACAE,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA3BF,YACR,GAAkDG,EAAAA,EAAAA,KAA1CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,WAiBnC,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,6GAEYJ,EAAQ,GAAD,OAC7BK,oCAD6B,kBACWZ,EADX,cAEhC,MACA,KACA,CACEa,cAAc,UAAD,OAAYX,EAAYY,SAP1B,OAETC,EAFS,OAUfhB,EAAegB,EAAaC,OAVb,uGAAH,qDAahBL,MACC,CAACJ,EAASP,EAAQE,KAEnB,gCACGI,IAAa,SAAC,IAAD,CAAgBW,WAAW,KACzC,SAAC,IAAD,CAAYT,MAAOA,EAAOU,QAAST,KACjCH,IACA,iBAAKa,UAAU,+BAAf,WACE,eAAIA,UAAU,wBAAd,SACGjB,GAAW,UAAOA,EAAYkB,KAAnB,qBAGbtB,GAAeA,EAAYuB,OAAS,GACnC,SAAC,IAAD,CAAUC,OAAO,EAAOC,MAAOzB,KAE/B","sources":["pages/ReadingList/ReadingList.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport ErrorModal from '../../components/Modal/ErrorModal';\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport useHttpClient from '../../hooks/useHttpClient';\nimport PostList from '../../components/PostList/PostList';\nimport { AuthContext } from '../../context/auth';\n\nconst ReadingList = () => {\n  const [loadedPosts, setLoadedPosts] = useState([]);\n  const { userId } = useParams();\n  const { currentUser } = useContext(AuthContext);\n  const { isLoading, sendReq, error, clearError } = useHttpClient();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const responseData = await sendReq(\n          `${process.env.REACT_APP_BASE_URL}/users/${userId}/bookmarks`,\n          'GET',\n          null,\n          {\n            Authorization: `Bearer ${currentUser.token}`,\n          }\n        );\n        setLoadedPosts(responseData.posts);\n      } catch (err) {}\n    };\n    fetchPosts();\n  }, [sendReq, userId, currentUser]);\n  return (\n    <>\n      {isLoading && <LoadingSpinner asOverlay={true} />}\n      <ErrorModal error={error} onClose={clearError} />\n      {!isLoading && (\n        <div className='container-posts reading-list'>\n          <h2 className='reading-list__heading'>\n            {currentUser && `${currentUser.name}'s Reading list`}\n          </h2>\n\n          {loadedPosts && loadedPosts.length > 0 ? (\n            <PostList cover={false} items={loadedPosts} />\n          ) : (\n            <p>Your reading list is empty!</p>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ReadingList;\n"],"names":["useState","loadedPosts","setLoadedPosts","userId","useParams","currentUser","useContext","AuthContext","useHttpClient","isLoading","sendReq","error","clearError","useEffect","fetchPosts","process","Authorization","token","responseData","posts","asOverlay","onClose","className","name","length","cover","items"],"sourceRoot":""}