{"version":3,"file":"static/js/931.473be08d.chunk.js","mappings":"mPAoCA,UA7BY,WACV,OAAkDA,EAAAA,EAAAA,KAA1CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,WACnC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA2BC,EAAAA,EAAAA,aAAnBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAajB,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,6GAEYX,EAAQ,GAAD,OAC7BY,oCAD6B,iBACUJ,IAH7B,OAETK,EAFS,OAKfP,EAAeO,EAAaC,IAAIC,OALjB,uGAAH,qDAQhBJ,MACC,CAACX,EAASS,EAAOD,KAElB,gCACGP,IAAa,SAAC,IAAD,CAAgBe,WAAW,KACzC,SAAC,IAAD,CAAYd,MAAOA,EAAOe,QAASd,KACnC,iBAAKe,UAAU,2BAAf,WACE,gBAAIA,UAAU,oBAAd,gCAAsDV,KAErDH,IAAe,SAAC,IAAD,CAAUc,OAAO,EAAOC,MAAOf","sources":["pages/Tag/Tag.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../hooks/useHttpClient';\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport ErrorModal from '../../components/Modal/ErrorModal';\nimport PostList from '../../components/PostList/PostList';\n\nconst Tag = () => {\n  const { sendReq, isLoading, error, clearError } = useHttpClient();\n  const [loadedPosts, setLoadedPosts] = useState([]);\n  const { tagName, tagId } = useParams();\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const responseData = await sendReq(\n          `${process.env.REACT_APP_BASE_URL}/tags/${tagName}`\n        );\n        setLoadedPosts(responseData.tag.posts);\n      } catch (err) {}\n    };\n    fetchPosts();\n  }, [sendReq, tagId, tagName]);\n  return (\n    <>\n      {isLoading && <LoadingSpinner asOverlay={true} />}\n      <ErrorModal error={error} onClose={clearError} />\n      <div className='container-posts tag-page'>\n        <h2 className='tag-page__heading'>Posts tagged with #{tagName}</h2>\n\n        {loadedPosts && <PostList cover={false} items={loadedPosts} />}\n      </div>\n    </>\n  );\n};\n\nexport default Tag;\n"],"names":["useHttpClient","sendReq","isLoading","error","clearError","useState","loadedPosts","setLoadedPosts","useParams","tagName","tagId","useEffect","fetchPosts","process","responseData","tag","posts","asOverlay","onClose","className","cover","items"],"sourceRoot":""}